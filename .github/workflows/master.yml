# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Canonical Ltd.
# Copyright 2024 Intel Corporation

name: Master workflow

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: go build

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: make docker-build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5.0.0
        with:
          version: latest
          args: -v --config ./.golangci.yml

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Dockerfile linter
        uses: hadolint/hadolint-action@v3.1.0
        # For now, ignoring:
        # DL3008 warning: Pin versions in apt get install (e.g., apt-get install <package>=<version>); and
        # DL3018 warning: Pin versions in apk add (e.g., apk add <package>=<version>)
        with:
          dockerfile: Dockerfile
          ignore: DL3008,DL3018

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: reuse lint
        uses: fsfe/reuse-action@v3

  fossa-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: FOSSA scan
        uses: fossa-contrib/fossa-action@v3
        with:
          fossa-api-key: 0c3bbcdf20e157bbd487dae173751b28

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Unit tests
        run: go test ./...

  docker-build-push-images:
  # This runs on statement defines a runner for the job
    runs-on: ubuntu-latest

    # Environment on which the this job runs
    env:
      # Uses the ghcr.io registry in the env vaariable registry
      REGISTRY: ghcr.io
      DOCKER_REGISTRY: ghcr.io/
      # picks up the given repository from the docker hub
      DOCKER_REPOSITORY: Trial-caze/
    # Various steps that have to be taken
    steps:
        #clone your repository's codebase down to the GitHub Actions runner where your workflow executes.
      - uses: actions/checkout@v4
         # purpose is to configure the Go development environment on the runner.
      - uses: actions/setup-go@v5
        with:
          # Version of GO
          go-version-file: 'go.mod'
        # ececutes the git command and stores it in the GIT_SHA_SHORT and then prints the output 
      - run: echo GIT_SHA_SHORT=$(git rev-parse --short HEAD) >> $GITHUB_ENV

        #uses this action to login with the given registry, username and pw
      - uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCRPASS }}

        #name of the job 
      - name: Build and push "master-latest" Docker image
        # has env variable named docker tag
        env:
          DOCKER_TAG: master-latest
        #runs the following command that builds and pushes the docker ask sir(image/container??)
        run: |
          make docker-build
          make docker-push
        # same as the previous step
      - name: Build and push "master-GIT_SHA" Docker image
        env:
          DOCKER_TAG: master-${{ env.GIT_SHA_SHORT }}
        run: |
          make docker-build
          make docker-push
